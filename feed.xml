<feed xmlns="http://www.w3.org/2005/Atom"> <id>https://hhhyunwoo.github.io//</id><title>Delicious Sushi</title><subtitle>A minimal, portfolio, sidebar, bootstrap Jekyll theme with responsive web design and focuses on text presentation.</subtitle> <updated>2022-07-23T16:36:31+09:00</updated> <author> <name>Hyunwoo Kim</name> <uri>https://hhhyunwoo.github.io//</uri> </author><link rel="self" type="application/atom+xml" href="https://hhhyunwoo.github.io//feed.xml"/><link rel="alternate" type="text/html" hreflang="en" href="https://hhhyunwoo.github.io//"/> <generator uri="https://jekyllrb.com/" version="4.2.2">Jekyll</generator> <rights> © 2022 Hyunwoo Kim </rights> <icon>/assets/img/favicons/favicon.ico</icon> <logo>/assets/img/favicons/favicon-96x96.png</logo> <entry><title>[Golang] map, slice, list 정리</title><link href="https://hhhyunwoo.github.io//posts/golang-basic/" rel="alternate" type="text/html" title="[Golang] map, slice, list 정리 " /><published>2022-07-23T00:00:00+09:00</published> <updated>2022-07-23T00:00:00+09:00</updated> <id>https://hhhyunwoo.github.io//posts/golang-basic/</id> <content src="https://hhhyunwoo.github.io//posts/golang-basic/" /> <author> <name>Hyunwoo Kim</name> </author> <category term="Golang" /> <summary> [Golang] map, slice, list 정리 Array 고정길이 배열 배열 크기를 동적으로 증가시키거나 부분 배열을 잘라내는 기능 없음. 배열의 크기를 데이터 타입 앞에 써줘야 함 package main func main() { var a [3] int a[0] = 1 a[1] = 2 a[2] = 3 println(a[1]) 초기화 값을 지정해주지 않으면 0으로 초기화가 됨. var a = [3]int{1,2,3} var b = [...]int{1,2,3} Slice 가변길이 배열. Python 의 List와 유사! Array와는 다르게 고정된 크기... </summary> </entry> <entry><title>[번역] Pid 네임스페이스에 대한 궁금증</title><link href="https://hhhyunwoo.github.io//posts/eng04_pid-namespace/" rel="alternate" type="text/html" title="[번역] Pid 네임스페이스에 대한 궁금증 " /><published>2022-07-16T00:00:00+09:00</published> <updated>2022-07-16T00:00:00+09:00</updated> <id>https://hhhyunwoo.github.io//posts/eng04_pid-namespace/</id> <content src="https://hhhyunwoo.github.io//posts/eng04_pid-namespace/" /> <author> <name>Hyunwoo Kim</name> </author> <category term="Linux" /> <summary> The Curious Case of Pid Namespaces [원본링크] https://hackernoon.com/the-curious-case-of-pid-namespaces-1ce86b6bc900 Pid 네임스페이스에 대한 궁금증 컨테이너들은 어떻게 pid들을 공유할까? 네임스페이스들은 리눅스 컨테이너들의 가장 중요한 컴포넌트 중 하나이다. 네임스페이스들은 공유 자원에 대해서 격리를 지원하는데, 각각의 어플리케이션이 자기 자신의 유니크한 시스템 뷰를 가질 수 있게 한다. 네임스페이스 덕분에 각각의 도커 컨테이너들은 자신의 파일시스템과 네트워크를 가질 수 있는 것이다. 리눅스는 수많은 배포를 통해서 네임스페이스를 더해왔다. 이러한 점진적인 변화 떄문에 네임스페이스의 각 타입들은 자신의 ... </summary> </entry> <entry><title>[Linux System Programming] Ch10 시그널</title><link href="https://hhhyunwoo.github.io//posts/linux_ch10/" rel="alternate" type="text/html" title="[Linux System Programming] Ch10 시그널 " /><published>2022-07-10T00:00:00+09:00</published> <updated>2022-07-13T09:48:20+09:00</updated> <id>https://hhhyunwoo.github.io//posts/linux_ch10/</id> <content src="https://hhhyunwoo.github.io//posts/linux_ch10/" /> <author> <name>Hyunwoo Kim</name> </author> <category term="Linux" /> <summary> [Ch10 시그널] Ch10 시그널 리눅스 환경에서 Robustness Test (강건성 테스트) 나 디버깅을 진행하다보면 여러가지 오류로 인해서 프로그램이 종료되는데, 이 때 Core dump가 있으면 디버깅에 유용하지만 로그만 남아 있는 경우도 있음. 이 때 단서가 되는 부분이 시그널임 시그널은 비동기 이벤트 처리를 위한 메커니즘을 제공하는 소프트웨어 인터럽트이다. Hardware interrupt : 외부에서 전기적 신호(이벤트)가 발생했을 때 Software interrupt : CPU가 연산중에 어떠한 조건에 맞는 이벤트가 발생했을 때 유저가 Ctrl+C 를 눌러 시스템 외부에서 발생시키거나, 프로세스가 0으로 나누는 연산을 수행한 경우처럼 프로그램이나 커널 내부 작업... </summary> </entry> <entry><title>[번역] The Code Review Pyramid</title><link href="https://hhhyunwoo.github.io//posts/eng03-code/" rel="alternate" type="text/html" title="[번역] The Code Review Pyramid" /><published>2022-07-09T00:00:00+09:00</published> <updated>2022-07-09T00:00:00+09:00</updated> <id>https://hhhyunwoo.github.io//posts/eng03-code/</id> <content src="https://hhhyunwoo.github.io//posts/eng03-code/" /> <author> <name>Hyunwoo Kim</name> </author> <category term="Translate" /> <category term="codereview" /> <summary> Code review Pyramid에 대한 글 번역 원본 링크 The Code Review Pyramid 코드리뷰에 대해서 이야기할 때 코드 포매팅이나 스타일에 관한 재미없는 논의들이 길고 지루하게 초점을 맞추는 경향이 있는 반면 중요한 측면(코드의 변경이 의도와 맞는지, 성능저하는 없는지, 기존 클라이언트와 호환은 잘 되는지 등)들은 덜 주목을 받는다. 이 이슈에 대한 인지도를 높이고 초점을 맞춰야하는 측면에 대한 가이드를 제공하기 위해서 트위터에 Code Review Pyrimid라고 내가 부르는 하나의 이미지를 올렸다. 이 트윗의 의도는 코드리뷰를 하는 동안 어떤 중요한 부분에 초점을 맞춰야하는지, 어떤 부분이 자동화가 될 수 있고 되어야하는지에 대해서 알려주기 위함이다. 몇몇 분들... </summary> </entry> <entry><title>[Code Review] 코드리뷰 참고자료 정리</title><link href="https://hhhyunwoo.github.io//posts/cr-01/" rel="alternate" type="text/html" title="[Code Review] 코드리뷰 참고자료 정리" /><published>2022-07-08T00:00:00+09:00</published> <updated>2022-07-08T00:00:00+09:00</updated> <id>https://hhhyunwoo.github.io//posts/cr-01/</id> <content src="https://hhhyunwoo.github.io//posts/cr-01/" /> <author> <name>Hyunwoo Kim</name> </author> <category term="Code Review" /> <summary> Code Review 란 소프트웨어를 실행하지 않고 사람이 직접 검토하는 과정을 통해서, 잠재된 결함을 찾아내고 이를 개선해나가면서 전반적인 소프트웨어의 품질을 높이고자 하는 활동 Programmer’s Ego 개발자는 자신의 코드를 자신의 것으로 여기고 비판을 수용하지 않는 경우가 있다. 이를 Programmer's Ego라고 한다. The Ten Commandments of Egoless Programming ref. Understand and accept that you will make mistakes. (당신이 실수했다는 것을 이해하고 받아들여라) You are not your code. (당신은 당신의 코드가 아니다) No matter how much “karate” you k... </summary> </entry> </feed>
